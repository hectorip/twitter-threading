thread:
    tweets:
      - text: |
          La pl치tica que se llama "Software is Details", dada por @KevlinHenney en GOTO 202, es una joya.
          El resumen: los ingenieros de software no debemos decir que algo es "s칩lo un detalle de implementaci칩n",
          ya que nos puede salir caro. Esto es un Rabbit Hole (hilo).

          游돕游낺
        media:
          - media/sid2.png
      - text: |
          1. El software est치 hecho a partir de significado. Es decir, los que lo creamos intentamos entender al m치ximo grado posible los casos de uso y para qu칠 estamos creando el software y esa es la base de la construcci칩n de todos los programas.
      - text: |
          Basado en lo anterior, no tiene sentido decir que algo es "s칩lo un detalle sem치ntico", porque Sem치ntica == Significado y al ignorar estos detalles ponemos en peligro el entendimiento del problema. Tenemos que ser lo m치s precisos posibles cuando hablamos de algo.
      - text: |
          2. Las abstracciones, entendidas como representaciones de las entidades y procesos del mundo real representadas en el software deben ayudarnos a ser muy precisos en nuestra comunicaci칩n y registro de ideas.
      - text: |
          3. Debemos tener cuidado de que nuestras abstracciones no nos hagan olvidar "detalles", debemos intentar mantener las dos vistas (la general y la detallada) todo el tiempo posible. Es por eso que los arquitectos de software NO deben estar separados del c칩digo.
        media:
          - media/sid3.png
      - text: |
          La pl치tica pone como ejemplo los mapas: el sentido de circulaci칩n de las calles parece un "detalle" que aparece hasta que haces mucho zoom sobre un mapa. Sin embargo, cambiar el sentido de circulaci칩n de las calles en una ciudad ser칤a algo MUY costoso.
      - text: |
          4. La arquitectura de software seg칰n @Grady_Booch es las decisiones que tomamos que despu칠s van a costar cambiar. Hay "detalles" que son muy costosos de cambiar, como el modelo de ejecuci칩n de un programa, cosas que un arquitecto no deber칤a pasar por alto.
      - text: |
          5. "No es acerca de las cajas, sino de las flechas". Esta frase se refiere a los diagramas que representan la arquitectura de un sistema. Puede que haya algo muy peque침o (la caja) de lo que muchas cosas dependan (las flechas).
      - text: |
          Detectar, proteger y dise침ar correctamente estas partes del sistema que parecen peque침as pero son fundamentales es una parte esencial del desarrollo de software. Adem치s, mientas menos dependencias entre m칩dulos haya, mejor.
        media:
          - media/sid4.png
      - text: |
          6. Programar es dise침ar. Siempre que programamos estamos definiendo c칩mo est치 compuesto algo y debemos estar atentos a las necesidades y limitantes del problema.
      - text: |
          7. Las suposiciones siempre existen, pero debemos conocerlas y ser expl칤cito respecto a cu치les son y d칩nde est치n. Si no, se pueden convertir en un lego en el piso en la oscuridad: te doler치 cuando te encuentres con ellas.
        media:
          - media/sid5.png
      - text: |
          8. Detectar errores temprano es importante: hazlo mediante testing y verificaci칩n de configuraci칩n. Los errores catastr칩ficos pueden ser casi eliminados por estos dos factores. La configuraci칩n es tan importante como el c칩digo.
      - text: |
          9. Un s칩lo tornillo parece no ser importante, hasta que te falta. En ese caso, el tornillo puede representar el valor entero de lo que est칠s construyendo.
      - text: |
          El m치s valioso para mi: 10. La arquitectura es un hip칩tesis que tiene que ser probada o refutada mediante la implementaci칩n y m칠tricas. Tu arquitectura no est치 terminada hasta que no aprendes los detalles de la operaci칩n.
        media:
          - media/sid6.png
      - text: |
          La pl치tica tiene algunos tintes c칩micos haciendo escarnio de algunos eufemismos que usaron empresas importantes para describir sus errores catastr칩ficos en el software como llamar "anomal칤a" al choque de una nave espacial.
        media:
          - media/sid2.png
      - text: |
          Si quieres aprender m치s del tema, no te pierdas la charla aqu칤: https://youtu.be/kX0prJklhUE
