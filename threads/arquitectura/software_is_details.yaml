thread:
    tweets:
      - text: |
          Esta semana vi una pl치tica que se llama "Software is Details", dada por @KevlinHenney en GOTO 2020. El resumen: los ingenieros de software no debemos confiarnos con decir que algo es "s칩lo un detalle", ya que nos puede salir caro. Esto es un Rabbit Hole.

          游돕游낺游녢
        media:
          - media/sid2.png
      - text: |
          1. El software est치 hecho a partir de significado. Es decir, los que lo creamos intentamos entender al m치ximo grado posible los casos de uso y para qu칠 estamos creando el software y esa es la base de la construcci칩n de todos los programas.
      - text: |
          Basado en lo anterior, no tiene sentido decir que algo es "s칩lo un detalle sem치ntico", porque Sem치ntica == Significado y al ignorar estos detalles ponemos en peligro el entendimiento del problema. Tenemos que ser lo m치s precisos posibles y nos podemos valer de las abstracciones para esto.
      - text: |
          2. Las abstracciones, entendidas como representaciones de las entidades y procesos del mundo real representadas en el software deben ayudarnos a ser muy precisos en nuestra comunicaci칩n y registro de ideas.
      - text: |
          3. Debemos tener cuidado de que nuestras abstracciones no nos hagan olvidar "detalles", debemos intentar mantener las dos vistas (la general y la detallada) todo el tiempo posible. Es por eso que los arquitectos de software NO deben estar separados del c칩digo.
        media:
          - media/sid3.png
      - text: |
